{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\Learning\\\\React Project\\\\Ajmera\\\\ecommerce-app\\\\src\\\\context\\\\CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/CartContext.tsx\n\nimport React, { createContext, useState, useContext } from 'react';\n\n// Define the CartItem type\n\n// Define the context types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create the CartContext with default value as null\nconst CartContext = /*#__PURE__*/createContext(undefined);\n// CartProvider component that provides cart state to the app\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]); // Initial empty cart\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      setCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the CartContext\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","undefined","CartProvider","children","_s","cart","setCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/aryan/Desktop/Learning/React Project/Ajmera/ecommerce-app/src/context/CartContext.tsx"],"sourcesContent":["// src/context/CartContext.tsx\r\n\r\nimport React, { createContext, useState, useContext, ReactNode } from 'react';\r\n\r\n// Define the CartItem type\r\ninterface CartItem {\r\n  id: number;\r\n  price: number;\r\n  quantity: number;\r\n  thumbnail?: string;\r\n  title: string;\r\n}\r\n\r\n// Define the context types\r\ninterface CartContextType {\r\n  cart: CartItem[];\r\n  setCart: React.Dispatch<React.SetStateAction<CartItem[]>>;\r\n}\r\n\r\n// Create the CartContext with default value as null\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// CartProvider component that provides cart state to the app\r\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\r\n  const [cart, setCart] = useState<CartItem[]>([]); // Initial empty cart\r\n  return (\r\n    <CartContext.Provider value={{ cart, setCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the CartContext\r\nexport const useCart = (): CartContextType => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;;AAE7E;;AASA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAMzE;AACA,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAa,EAAE,CAAC,CAAC,CAAC;EAClD,oBACEG,OAAA,CAACC,WAAW,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC5CA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAR,EAAA,CATaF,YAAyC;AAAAW,EAAA,GAAzCX,YAAyC;AAUtD,OAAO,MAAMY,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAGnB,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}