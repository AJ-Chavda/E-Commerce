{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\Learning\\\\React Project\\\\Ajmera\\\\ecommerce-app\\\\src\\\\pages\\\\Login.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Login.tsx\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField, Box } from '@mui/material';\nimport { useUserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const {\n    setUser\n  } = useUserContext(); // Assuming setUser is provided by UserContext\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    if (username.trim() !== '') {\n      const token = 'dummy-auth-token'; // Dummy token\n      localStorage.setItem('authToken', token); // Store token in localStorage\n      setUser({\n        name: username\n      }); // Set the user name in the global context\n      navigate('/'); // Redirect to home page after login\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      margin: 'auto',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      fullWidth: true,\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      sx: {\n        marginBottom: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleLogin,\n      fullWidth: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"NntHM4RyYoxTxXsJx0SJlJPNbQw=\", false, function () {\n  return [useUserContext, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","Button","TextField","Box","useUserContext","jsxDEV","_jsxDEV","Login","_s","username","setUsername","setUser","navigate","handleLogin","trim","token","localStorage","setItem","name","sx","maxWidth","margin","padding","children","label","fullWidth","value","onChange","e","target","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Desktop/Learning/React Project/Ajmera/ecommerce-app/src/pages/Login.tsx"],"sourcesContent":["// src/pages/Login.tsx\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, TextField, Box } from '@mui/material';\r\nimport { useUserContext } from '../context/UserContext';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const { setUser } = useUserContext(); // Assuming setUser is provided by UserContext\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    if (username.trim() !== '') {\r\n      const token = 'dummy-auth-token'; // Dummy token\r\n      localStorage.setItem('authToken', token); // Store token in localStorage\r\n      setUser({ name: username }); // Set the user name in the global context\r\n      navigate('/'); // Redirect to home page after login\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, margin: 'auto', padding: 2 }}>\r\n      <TextField\r\n        label=\"Username\"\r\n        fullWidth\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        sx={{ marginBottom: 2 }}\r\n      />\r\n      <Button variant=\"contained\" onClick={handleLogin} fullWidth>\r\n        Login\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEY;EAAQ,CAAC,GAAGP,cAAc,CAAC,CAAC,CAAC,CAAC;EACtC,MAAMQ,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1B,MAAMC,KAAK,GAAG,kBAAkB,CAAC,CAAC;MAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC,CAAC,CAAC;MAC1CJ,OAAO,CAAC;QAAEO,IAAI,EAAET;MAAS,CAAC,CAAC,CAAC,CAAC;MAC7BG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEN,OAAA,CAACH,GAAG;IAACgB,EAAE,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACrDjB,OAAA,CAACJ,SAAS;MACRsB,KAAK,EAAC,UAAU;MAChBC,SAAS;MACTC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CP,EAAE,EAAE;QAAEW,YAAY,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACF5B,OAAA,CAACL,MAAM;MAACkC,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEvB,WAAY;MAACY,SAAS;MAAAF,QAAA,EAAC;IAE5D;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CA5BQD,KAAK;EAAA,QAEQH,cAAc,EACjBJ,WAAW;AAAA;AAAAqC,EAAA,GAHrB9B,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}