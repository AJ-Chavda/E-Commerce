{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\Learning\\\\React Project\\\\Ajmera\\\\ecommerce-app\\\\src\\\\pages\\\\Login.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Login.tsx\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    if (username.trim()) {\n      // Simulate login by storing a dummy token in localStorage\n      localStorage.setItem('authToken', 'dummy-auth-token');\n      localStorage.setItem('username', username); // Store username\n      navigate('/'); // Redirect to home page after login\n    } else {\n      setError('Username cannot be empty');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '400px',\n      margin: '0 auto',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Enter username\",\n      style: {\n        padding: '10px',\n        width: '80%',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      style: {\n        padding: '10px 20px'\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"KNm/Em1Mjk+IvHgTez49eG0igTw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","error","setError","navigate","handleLogin","trim","localStorage","setItem","style","padding","maxWidth","margin","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","width","marginBottom","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Desktop/Learning/React Project/Ajmera/ecommerce-app/src/pages/Login.tsx"],"sourcesContent":["// src/pages/Login.tsx\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    if (username.trim()) {\r\n      // Simulate login by storing a dummy token in localStorage\r\n      localStorage.setItem('authToken', 'dummy-auth-token');\r\n      localStorage.setItem('username', username); // Store username\r\n      navigate('/'); // Redirect to home page after login\r\n    } else {\r\n      setError('Username cannot be empty');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '400px', margin: '0 auto', textAlign: 'center' }}>\r\n      <h2>Login</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Enter username\"\r\n        style={{ padding: '10px', width: '80%', marginBottom: '10px' }}\r\n      />\r\n      <br />\r\n      <button onClick={handleLogin} style={{ padding: '10px 20px' }}>Login</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIL,QAAQ,CAACM,IAAI,CAAC,CAAC,EAAE;MACnB;MACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAE,kBAAkB,CAAC;MACrDD,YAAY,CAACC,OAAO,CAAC,UAAU,EAAER,QAAQ,CAAC,CAAC,CAAC;MAC5CI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACLD,QAAQ,CAAC,0BAA0B,CAAC;IACtC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKY,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACxFjB,OAAA;MAAAiB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,QAAS;MAChBqB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,gBAAgB;MAC5Bf,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEe,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACFrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrB,OAAA;MAAQ8B,OAAO,EAAEtB,WAAY;MAACI,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAY,CAAE;MAAAI,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5EhB,KAAK,iBAAIL,OAAA;MAAGY,KAAK,EAAE;QAAEmB,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BID,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAAkC,EAAA,GAHxB/B,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}