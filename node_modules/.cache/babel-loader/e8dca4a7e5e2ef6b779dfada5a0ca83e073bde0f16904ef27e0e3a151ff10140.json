{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\Learning\\\\React Project\\\\Ajmera\\\\ecommerce-app\\\\src\\\\context\\\\UserContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(undefined);\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) setUser(storedUser);\n  }, []);\n  useEffect(() => {\n    if (user) localStorage.setItem('user', user);else localStorage.removeItem('user');\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(UserProvider, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","UserContext","undefined","UserProvider","children","_s","user","setUser","storedUser","localStorage","getItem","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Desktop/Learning/React Project/Ajmera/ecommerce-app/src/context/UserContext.tsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport interface UserContextType {\r\n  user: string | null;\r\n  setUser: (user: string | null) => void;\r\n}\r\n\r\nexport const UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const UserProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) setUser(storedUser);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) localStorage.setItem('user', user);\r\n    else localStorage.removeItem('user');\r\n  }, [user]);\r\n\r\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEhF,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAED,OAAO,CAACC,UAAU,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAEG,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEL,IAAI,CAAC,CAAC,KACxCG,YAAY,CAACG,UAAU,CAAC,MAAM,CAAC;EACtC,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,oBAAON,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAER,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAAEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC1F,CAAC;AAACb,EAAA,CAdWF,YAAqD;AAAAgB,EAAA,GAArDhB,YAAqD;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}